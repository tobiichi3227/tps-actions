name: Build tests

on:
  workflow_call:
    inputs:
      input:
        description: 'Problem labels to build inputs'
        type: string
        default: ''
      output:
        description: 'Problem labels to build outputs'
        type: string
        default: ''
      solutions:
        description: 'Problem labels to run solutions'
        type: string
        default: ''
      runs-on:
        default: 'ubuntu-latest'
        required: false
        type: string
      timeout-minutes:
        default: 15
        required: false
        type: number

jobs:
  pre-build:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: tobiichi3227/tps-github-runner
      options: --user root
    timeout-minutes: 3
    outputs:
      problems: ${{ steps.run-problems.outputs.problemsjson }}
      input: ${{ env.REQIN }}
      output: ${{ env.REQOUT }}
      solutions: ${{ env.REQSOL }}
    steps:
      - uses: actions/checkout@v3

      - name: Allow Git to access workspace
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Get changes
        if: github.event_name == 'push'
        id: changes
        uses: TNFSH-Programming-Contest/tps-actions/.github/actions/get-changes@main

      - name: Check push
        if: github.event_name == 'push'
        env:
          CHANGES: ${{ steps.changes.outputs.changes }}
        run: |
          echo "$CHANGES"
          echo "REQUEST=${{ fromJson(steps.changes.outputs.changes).tests }}" >> $GITHUB_ENV
          echo "REQIN=${{ fromJson(steps.changes.outputs.changes).input }}" >> $GITHUB_ENV
          echo "REQOUT=${{ fromJson(steps.changes.outputs.changes).output }}" >> $GITHUB_ENV
          echo "REQSOL=${{ fromJson(steps.changes.outputs.changes).solutions }}" >> $GITHUB_ENV

      - name: Check dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "REQUEST=${{ inputs.input }}${{ inputs.output }}${{ inputs.solutions }}" >> $GITHUB_ENV
          echo "REQIN=${{ inputs.input }}" >> $GITHUB_ENV
          echo "REQOUT=${{ inputs.output }}" >> $GITHUB_ENV
          echo "REQSOL=${{ inputs.solutions }}" >> $GITHUB_ENV

      - name: Filter problems
        id: run-problems
        uses: TNFSH-Programming-Contest/tps-actions/.github/actions/run-problems@main
        with:
          requests: ${{ env.REQUEST }}

  build-tests:
    needs: [pre-build]
    if: needs.pre-build.outputs.problems != '[]'
    runs-on: ${{ inputs.runs-on }}
    container:
      image: tobiichi3227/tps-github-runner
      options: --user root
    timeout-minutes: ${{ inputs.timeout-minutes }}
    strategy:
      matrix:
        problem: ${{ fromJson(needs.pre-build.outputs.problems) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Allow Git to access workspace
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Setup git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Build inputs and outputs
        if: contains(needs.pre-build.outputs.input, matrix.problem)
        working-directory: p${{ matrix.problem }}
        run: |
          echo "Building input for ${{ matrix.problem }}"
          tps gen -s
          git status
          git add gen/data
          git add tests/*.in
          git add tests/*.out
          git add tests/gen_summary
          git add tests/mapping
          git pull
          git diff --cached --quiet || git commit -m "p${{ matrix.problem }} Build inputs and outputs

          Co-Authored-By: ${{ github.event.sender.login }} <${{ github.event.sender.id }}+${{ github.event.sender.login }}@users.noreply.github.com>"
          git push

      - name: Build outputs
        if: contains(needs.pre-build.outputs.output, matrix.problem) && !contains(needs.pre-build.outputs.input, matrix.problem)
        working-directory: p${{ matrix.problem }}
        run: |
          echo "Building output for ${{ matrix.problem }}"
          tps gen -s --no-gen
          git status
          git add tests/*.out
          git pull
          git diff --cached --quiet || git commit -m "p${{ matrix.problem }} Build outputs

          Co-Authored-By: ${{ github.event.sender.login }} <${{ github.event.sender.id }}+${{ github.event.sender.login }}@users.noreply.github.com>"
          git push

      - name: Check tests changes
        id: tests-changes
        run: |
          set +e

          git diff ${{ github.sha }}..HEAD --quiet p${{ matrix.problem }}/tests/*.in p${{ matrix.problem }}/tests/*.out
          if [ $? -ne 0 ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Tests changed"
          else
            echo "No changes in tests";
          fi

      - name: Run solutions
        if: contains(needs.pre-build.outputs.solutions, matrix.problem) || steps.tests-changes.outputs.changed == 'true'
        working-directory: p${{ matrix.problem }}
        run: |
          echo "Run solutions for ${{ matrix.problem }}"
          rm -f solutions-check.txt
          tps solutions | tee -a solutions-check.txt
          git status
          git add solutions-check.txt
          git pull
          git diff --cached --quiet || git commit -m "p${{ matrix.problem }} Run solutions"
          git push
